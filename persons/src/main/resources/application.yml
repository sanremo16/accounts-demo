info:
    app:
        name: Persons Application
        service-id: '@app.service.id@'
        api-version: '@app.api.version@'
        release-id: '@version@'
spring:
    jpa:
        generate-ddl: true
        database: h2
        show-sql: true
        defer-datasource-initialization: true
        hibernate:
            ddl-auto: create-drop
    datasource:
        name: persons
        #url: jdbc:h2:mem:mydb;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL;INIT=CREATE SCHEMA IF NOT EXISTS persons
        url: jdbc:h2:file:./persons/src/main/resources/data/persons;MODE=PostgreSQL;AUTO_SERVER=true;INIT=CREATE SCHEMA IF NOT EXISTS persons
        username: sa
        password: password
    h2:
        console:
            enabled: true
            path: /console
    application:
        name: persons
    sql:
        init:
            data-locations: classpath:/sql/data.sql
            mode: always
    mvc:
        pathmatch:
            matching-strategy: ANT_PATH_MATCHER
server:
    port: 8083
management:
    endpoints:
        web:
            cors:
                allowed-origins: '*'
            exposure:
                include: prometheus,health,info,metrics
    security:
        enabled=false
    endpoint:
        health:
            show-details: always
            probes:
               enabled: true
    metrics:
        distribution:
            percentiles:
                "[http.server.requests]": 0.9, 0.95
                "[response_size]": 0.9, 0.95
                "[request_size]": 0.9, 0.95
    info:
        env:
            enabled: true
        java:
            enabled: true
springdoc:
    show-actuator: false

